Code 6
Problem Statement:
Write a python program to store roll numbers of student array
who attended training program in sorted order. Write function for searching
whether particular student attended training program or not,
using Binary search and Fibonacci search

Code
def accept_array(A):
    n = int(input("Enter total no of students: "))
    print("Input roll numbers in sorted order")
    for i in range(n):
        X = int(input("Enter roll number of student: "))
        A.append(X)
    print("Student info accepted successfully\n\n")
    return n

def display_array(A, n):
    if n == 0:
        print("\nNo records in database")
    else:
        print("Students array:", end=' ')
        for i in range(n):
            print("%d" % A[i], end='  ')
        print("\n")

def Recursive_binary_search(A, s, l, X):
    if s <= l:
        mid = int((s + l) / 2)
        if A[mid] == X:
            return mid
        elif X < A[mid]:
            return Recursive_binary_search(A, s, mid - 1, X)
        else:
            return Recursive_binary_search(A, mid + 1, l, X)
    return -1

def Iterative_binary_search(A, n, X):
    s = 0
    l = n - 1
    while s <= l:
        mid = int((s + l) / 2)
        if A[mid] == X:
            return mid
        elif X < A[mid]:
            l = mid - 1
        else:
            s = mid + 1
    return -1

def Fibonacci_search(A, n, X):
    f1 = 0
    f2 = 1
    f3 = f1 + f2
    offset = -1
    while f3 < n:
        f1 = f2
        f2 = f3
        f3 = f1 + f2
    while f3 > 1:
        i = min(offset + f1, n - 1)
        if A[i] == X:
            return i
        elif X < A[i]:
            f3 = f1
            f2 = f2 - f1
            f1 = f3 - f2
        else:
            f3 = f2
            f2 = f1
            f1 = f3 - f2
            offset = i
    if f2 == 1 and (offset + 1) < n and A[offset + 1] == X:
        return offset + 1
    return -1

def Main():
    A = []
    while True:
        print("\t1: Accept and display student info")
        print("\t2: Recursive binary search")
        print("\t3: Iterative binary search")
        print("\t4: Fibonacci search")
        print("\t5: Exit")
        ch = int(input("Enter your choice: "))
        
        if ch == 5:
            print("End of programme")
            quit()
        elif ch == 1:
            A = []
            n = accept_array(A)
            display_array(A, n)
        elif ch == 2:
            if len(A) == 0:
                print("No records available. Please enter student data first.\n")
            else:
                X = int(input("Enter roll number to be searched: "))
                flag = Recursive_binary_search(A, 0, len(A) - 1, X)
                if flag == -1:
                    print("\tRoll number to be searched not found\n")
                else:
                    print("\tRoll number found at location %d" % (flag + 1))
        elif ch == 3:
            if len(A) == 0:
                print("No records available. Please enter student data first.\n")
            else:
                X = int(input("Enter roll number to be searched: "))
                flag = Iterative_binary_search(A, len(A), X)
                if flag == -1:
                    print("\tRoll number to be searched not found\n")
                else:
                    print("\tRoll number found at location %d" % (flag + 1))
        elif ch == 4:
            if len(A) == 0:
                print("No records available. Please enter student data first.\n")
            else:
                X = int(input("Enter roll number to be searched: "))
                flag = Fibonacci_search(A, len(A), X)
                if flag == -1:
                    print("\tRoll number to be searched not found\n")
                else:
                    print("\tRoll number found at location %d" % (flag + 1))
        else:
            print("Wrong choice entered! Try again.")

Main()
